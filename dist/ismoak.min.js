angular.module("ismoak.templates",[]).run(["$templateCache",function(e){e.put("ismoak.html",'<div\n    dropdown \n    keyboard-nav\n    auto-close="outsideClick"\n    on-toggle="ismoakDropdown.toggle(open)"\n    class="multiselect btn-group">\n    <button\n        dropdown-toggle\n        type="button" \n        class="btn btn-sm btn-default"\n        ng-disabled="ismoakDropdown.disabled()">\n        <span class="value"></span>\n        <span class="caret"></span>\n    </button>\n    <ul class="dropdown-menu">\n        <ul class="utils">\n            <li class="buttons">\n                <button \n                    type="button" \n                    class="btn btn-xs btn-default select-all"\n                    ng-disabled="ismoakDropdown.allSelected(ismoakDropdown.items)" \n                    ng-click="ismoakDropdown.selectAll()">\n                    {{ ismoakDropdown.ops.selectAllBtnText }}\n                </button>\n                <button \n                    type="button" \n                    class="btn btn-xs btn-default select-none"\n                    ng-disabled="ismoakDropdown.noneSelected(ismoakDropdown.items)" \n                    ng-click="ismoakDropdown.selectNone()">\n                    {{ ismoakDropdown.ops.selectNoneBtnText }}\n                </button>\n            </li>\n            <li class="search" ng-if="ismoakDropdown.ops.searchable">\n                <div class="form-group">\n                    <input\n                        type="text" \n                        class="form-control input-sm"\n                        placeholder="Filter"\n                        ng-model="ismoakDropdown.filterText"\n                        clear-input />\n                </div>\n            </li>\n        </ul>\n        <ul class="results" ng-if="!ismoakDropdown.ops.groupBy">\n            <li\n                ng-repeat="item in filteredItems = (ismoakDropdown.items | filter: ismoakDropdown.filterText | orderBy: ismoakDropdown.ops.orderBy)"\n                ng-class="{\'active\': ismoakDropdown.isSelected(item)}">\n                <a ng-click="ismoakDropdown.select(item)">\n                    <input type="checkbox" ng-checked="ismoakDropdown.isSelected(item)" />\n                    {{ item[ismoakDropdown.ops.displayProp] }}\n                </a>\n            </li>\n        </ul>\n\n        <ul class="results" ng-if="ismoakDropdown.ops.groupBy">\n            <li\n                class="result-group"\n                ng-init="ismoakDropdown.groups[$index].isOpen = ismoakDropdown.ops.groupsOpen"\n                ng-repeat="(itemGroupName, itemGroup) in ismoakDropdown.itemsGrouped"\n                ng-class="{\n                    \'open\': ismoakDropdown.groups[$index].isOpen || ismoakDropdown.filterText.length > 0,\n                    \'active\': ismoakDropdown.allSelected(itemGroup)\n                }">\n                <a ng-click="ismoakDropdown.selectGroup(ismoakDropdown.indexById(itemGroup))">\n                    <input \n                        type="checkbox" \n                        ng-checked="ismoakDropdown.allSelected(ismoakDropdown.indexById(itemGroup))" \n                        indeterminate="!ismoakDropdown.allSelected(ismoakDropdown.indexById(itemGroup)) && !ismoakDropdown.noneSelected(ismoakDropdown.indexById(itemGroup))" />\n                    {{ itemGroupName }}\n                </a>\n                <i \n                    class="fa fa-caret-down"\n                    ng-class="{\'fa-caret-up\': ismoakDropdown.groups[$index].isOpen || ismoakDropdown.filterText.length > 0}"\n                    ng-click="ismoakDropdown.groups[$index].isOpen = !ismoakDropdown.groups[$index].isOpen"></i>\n                <ul>\n                    <li\n                        ng-repeat="item in filteredItems = (itemGroup | filter: ismoakDropdown.filterText | orderBy: ismoakDropdown.ops.orderBy)"\n                        ng-class="{\'active\': ismoakDropdown.isSelected(item)}">\n                        <a ng-click="ismoakDropdown.select(item)">\n                            <input type="checkbox" ng-checked="ismoakDropdown.isSelected(item)" />\n                            {{ item[ismoakDropdown.ops.displayProp] }}\n                        </a>\n                    </li>\n                </ul>\n            </li>\n        </ul>\n    </ul>\n</div>')}]),function(e){"use strict";e.module("ismoak",["ismoak.templates","ui.bootstrap","ui.indeterminate"])}(angular),function(e){"use strict";function n(){function e(e,n){function o(){w.ops=_.defaults(w.options,{groupBy:null,groupsOpen:!1,orderBy:"name",searchable:!0,displayProp:"name",maxDisplayed:3,labelBuilder:i,noneMessage:"None Selected",allMessage:"All Selected",partialMessage:"${count} selected",selectAllBtnText:"Select All",selectNoneBtnText:"Select None",searchNoResultsText:"No items matching your search query."}),w.items=w.items(),w.itemsGrouped=_.groupBy(w.items,function(e){return _.get(e,w.ops.groupBy)})}function t(e){D.$setViewValue(e),D.$render()}function s(){var e=D.$viewValue,o=w.ops.labelBuilder(e,w.items);D.$setValidity("required",_.size(_.keys(e))>0),n.find("button span.value").first().text(o)}function i(e,n){var o=_.pluck(e,w.ops.displayProp).join(", ")||w.ops.noneMessage;return _.size(e)>w.ops.maxDisplayed&&(o=w.ops.partialMessage),_.size(e)===_.size(n)&&(o=w.ops.allMessage),_.template(o)({count:_.size(e)})}function l(e){e||"function"!=typeof w.onBlur||w.onBlur()}function r(e){var n=k(D.$viewValue,e);t(n)}function a(e){var n=_.merge({},D.$viewValue,e);c(e)&&(n=_.omit(D.$viewValue,_.keys(e))),t(n)}function p(){t(g(w.items))}function d(){t({})}function u(e){return _.has(D.$viewValue,_.result(e,"getId"))}function c(e){return _.all(e,u)}function m(e){return!_.any(e,u)}function k(e,n){return _.has(e,n.getId())?_.omit(e,n.getId()):_.set(e,n.getId(),n)}function g(e){return _.zipObject(_.invoke(e,"getId"),e)}var w=this;w.groups=[],w.toggle=l,w.select=r,w.selectGroup=a,w.selectAll=p,w.selectNone=d,w.isSelected=u,w.allSelected=c,w.noneSelected=m,w.indexById=g,o();var D=n.controller("ngModel");D.$render=s}return e.$inject=["$scope","$element"],{scope:{},restrict:"E",require:"ngModel",bindToController:{items:"&",options:"=",disabled:"&",onBlur:"&"},controller:e,controllerAs:"ismoakDropdown",templateUrl:"ismoak.html"}}e.module("ismoak").directive("ismoakDropdown",n)}(angular);